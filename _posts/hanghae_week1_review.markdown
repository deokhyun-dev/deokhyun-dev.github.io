---
layout: post
title: "[항해99] 1주차 회고"
date: 2021-09-19 21:03:36 +0530
categories: Frontend
---

### 1. 협업 환경 공부 및 세팅 필요

<hr>

**1-1. 깃 <br>**
개인 프로젝트 관리를 위한 깃 사용이 아닌 협업을 위한 깃 사용은 처음이였음. 공용 git 계정을 생성하고 branch, clone, pull 등 생소한 깃 관련 용어를
<br>

**1-2. 개발환경 <br>**
팀원이 작업한 코드를 clone받아 사용할 때 내 개발환경에서 돌아가지 않는 문제가 있었음. 아직 정확하게 해결하지 못해 팀원이 작업한 코드를 매번 클론 후 내 작업폴더에 붙여넣는 식으로 작업했었는데 다음 팀프로젝트의 원활한 진행을 위해 협업을 위한 개발환경을 구축해야함.
누구나 알아볼 수 있는 변수명, 함수명
작게는 class명부터 변수명과 함수명 모두 명칭만 보고도 어떤 목적인지 알 수 있게 작명해야함을 꺠달음.

<br>
<br>

### 2. 프로젝트

<hr>

**2-1. 자료형** <br>
데이터를 받아오거나 JS함수를 쓸 떄 자료형에 대한 이해가 충분하지 않아 오류나는 경우가 많았음.예를 들어 삽입해야하는 변수는 숫자인데, 문자열을 삽입한다던지. 템플릿 리터럴 문법으로 인해 변수가 아닌 스트링으로 삽입되었음. 앞으로 다양한 함수와 데이터를 접해보면서 요청, 수신되는 데이터의 자료형과 그 활용을 더 익숙하게 만들어야겠다고 생각함.
<br>

**2-2. DB, API 설계** <br>
개인적으로 클라이언트와 서버단 둘다 작업해본 것은 이번이 처음이였는 데, 데이터가 어떻게 왔다갔다 하는지 흐름을 잘 알게되었음. 다만 "GET"방식과 "POST"방식의 차이를 정확히 모르고 사용했음. 예를 들어 특정 유저의 포스팅을 갖고 올때는 요청할 때부터 'id'를 "POST" 해야하고 동시에 포스팅 받아오는 "GET"을 사용해야하는 데, 정확히 무엇이 맞는지 모르고 사용함. (이번 프로젝트에는 "POST"로 해결함) 그 외에도 서버코드 상 상단에 import되는 부분이라던지, 각자의 mongoDB에서 작업하다가 하나로 합쳐야할 때 어떤 작업을 해야할지 정확히 모르고 있음. 다음 프로젝트에는 서버쪽 코드를 정확하게 이해하고 사용해야겠음.

**2-3. CSS <br>**
이번에 사용했던 CSS를 다음 프로젝트에서 정확하게 알고, 사용할 자신이 없음. 예를 들어 엘리먼트들의 중앙정렬은 여러 코드를 입력해보고 되면 되는가보다 했음. 다음 프로젝트 시작 전 딱 내가 원하는 레이아웃을 만들기 위해 CSS에 대한 정확한 지식을 쌓고 써보면서 능숙하게 만들어야함.
